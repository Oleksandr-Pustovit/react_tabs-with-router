{"version":3,"sources":["components/NavBar/NavBar.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["NavBar","className","to","isActive","classNames","Tabs","tabs","tabId","useParams","selectedTab","find","tab","id","length","map","classnames","title","content","tabsFromServer","App","useState","setTabs","useEffect","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"8PAIaA,EAAa,kBACxB,mCAEE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,YAAaD,KAJnB,kBAUA,cAAC,IAAD,CACED,GAAG,QACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,YAAaD,KAJnB,4BCdGE,EAAkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACxBC,EAAUC,cAAVD,MAEFE,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAEhD,OAAoB,IAAhBD,EAAKO,OAEL,qCACE,oBAAIZ,UAAU,QAAd,uBAEA,gEAMJ,qCACE,oBAAIA,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGK,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACE,UAAQ,MACRV,UAAWc,IAAW,CAAE,YAAaJ,EAAIC,KAAOL,IAFlD,SAKE,cAAC,IAAD,CAAML,GAAE,aAAQS,EAAIC,IAApB,SAA2BD,EAAIK,SAF1BL,EAAIC,WAQjB,qBAAKX,UAAU,QAAQ,UAAQ,aAA/B,SACGM,GAASE,EACR,mCACGA,EAAYQ,UAGf,iECvCJC,EAAwB,CAC5B,CAAEN,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,gBAG7BE,EAAM,WACjB,MAAwBC,mBAAgB,IAAxC,mBAAOd,EAAP,KAAae,EAAb,KAMA,OAJAC,qBAAU,WACRD,EAAQH,GAAkB,MACzB,IAGD,qCACE,cAAC,EAAD,IAEA,qBAAKjB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SAEE,eAAC,IAAD,WACE,cAAC,IAAD,CACEsB,KAAK,IACLC,QAAS,oBAAIvB,UAAU,QAAd,8BAEX,cAAC,IAAD,CAAOsB,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUtB,GAAG,IAAIuB,SAAO,MACpD,cAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,oBAAIvB,UAAU,QAAd,yBAEzB,eAAC,IAAD,CAAOsB,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,CAAMlB,KAAMA,MAClC,cAAC,IAAD,CAAOiB,KAAK,SAASC,QAAS,cAAC,EAAD,CAAMlB,KAAMA,oBCnCxDqB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8b5daeb7.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar: FC = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'is-active': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/tabs\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'is-active': isActive },\n            )}\n          >\n            Tabs\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  </>\n);\n","import classnames from 'classnames';\nimport { FC } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[]\n};\n\nexport const Tabs: FC<Props> = ({ tabs }) => {\n  const { tabId } = useParams();\n\n  const selectedTab = tabs.find(tab => tab.id === tabId);\n\n  if (tabs.length === 0) {\n    return (\n      <>\n        <h1 className=\"title\">Tabs page</h1>\n\n        <p>No tabs received from server</p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              className={classnames({ 'is-active': tab.id === tabId })}\n              key={tab.id}\n            >\n              <Link to={`../${tab.id}`}>{tab.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabId && selectedTab ? (\n          <>\n            {selectedTab.content}\n          </>\n        ) : (\n          <>\n            Please select a tab\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { NavBar } from './components/NavBar';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nconst tabsFromServer: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [tabs, setTabs] = useState<Tab[]>([]);\n\n  useEffect(() => {\n    setTabs(tabsFromServer || []);\n  }, []);\n\n  return (\n    <>\n      <NavBar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n\n          <Routes>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/\" element={<h1 className=\"title\">Home page</h1>} />\n\n            <Route path=\"tabs\">\n              <Route index element={<Tabs tabs={tabs} />} />\n              <Route path=\":tabId\" element={<Tabs tabs={tabs} />} />\n            </Route>\n\n          </Routes>\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}